name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-to-cluster:
    runs-on: self-hosted

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: walid-isga/timi-devops-poc   # ⚠️ en minuscules
      K8S_NAMESPACE: timi
      K8S_DEPLOYMENT: timi-api
      KCTX: kind-timi

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Sanity check cluster (uses local kubectl)
        shell: cmd
        run: |
          kubectl config use-context %KCTX%
          kubectl get nodes

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull :latest (optional visibility)
        shell: cmd
        run: |
          docker pull %REGISTRY%/%IMAGE_NAME%:latest

      - name: Apply manifests
        shell: cmd
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Set deployment image to :latest (cluster pulls from GHCR)
        shell: cmd
        run: |
          kubectl -n %K8S_NAMESPACE% set image deployment/%K8S_DEPLOYMENT% %K8S_DEPLOYMENT%=%REGISTRY%/%IMAGE_NAME%:latest

      - name: Wait for rollout
        shell: cmd
        run: |
          kubectl -n %K8S_NAMESPACE% rollout status deploy/%K8S_DEPLOYMENT% --timeout=240s
          kubectl -n %K8S_NAMESPACE% get pods -o wide

      - name: Sanity check /health from inside cluster
        shell: cmd
        run: |
          for /f "delims=" %%i in ('kubectl -n %K8S_NAMESPACE% get pod -l app=%K8S_DEPLOYMENT% -o jsonpath="{.items[0].metadata.name}"') do set POD=%%i
          kubectl -n %K8S_NAMESPACE% exec %POD% -- sh -c "wget -qO- http://localhost:5000/health || true"
