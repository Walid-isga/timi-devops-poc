name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-to-kind:
    runs-on: self-hosted

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: walid-isga/timi-devops-poc   # lowercase
      K8S_NAMESPACE: timi
      K8S_DEPLOYMENT: timi-api
      KCTX: kind-timi

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Download a portable kubectl (no need to rely on PATH)
      - name: Fetch kubectl v1.30.0 (portable)
        shell: cmd
        run: |
          powershell -Command "Invoke-WebRequest -Uri https://dl.k8s.io/release/v1.30.0/bin/windows/amd64/kubectl.exe -OutFile kubectl.exe"
          if not exist kubectl.exe ( echo kubectl.exe download failed & exit /b 1 )
          echo KUBECTL_EXE=%CD%\kubectl.exe>> %GITHUB_ENV%

      - name: Sanity check cluster
        shell: cmd
        run: |
          "%KUBECTL_EXE%" version --client
          "%KUBECTL_EXE%" config use-context %KCTX%
          "%KUBECTL_EXE%" get nodes

      - name: Apply manifests
        shell: cmd
        run: |
          "%KUBECTL_EXE%" apply -f k8s/namespace.yaml
          "%KUBECTL_EXE%" apply -f k8s/deployment.yaml
          "%KUBECTL_EXE%" apply -f k8s/service.yaml

      - name: Set deployment image to :latest (cluster pulls from GHCR)
        shell: cmd
        run: |
          "%KUBECTL_EXE%" -n %K8S_NAMESPACE% set image deployment/%K8S_DEPLOYMENT% %K8S_DEPLOYMENT%=%REGISTRY%/%IMAGE_NAME%:latest

      - name: Wait for rollout
        shell: cmd
        run: |
          "%KUBECTL_EXE%" -n %K8S_NAMESPACE% rollout status deploy/%K8S_DEPLOYMENT% --timeout=240s
          "%KUBECTL_EXE%" -n %K8S_NAMESPACE% get pods -o wide

      - name: Sanity check /health inside cluster
        shell: cmd
        run: |
          for /f "delims=" %%i in ('"%KUBECTL_EXE%" -n %K8S_NAMESPACE% get pod -l app=%K8S_DEPLOYMENT% -o jsonpath="{.items[0].metadata.name}"') do set POD=%%i
          "%KUBECTL_EXE%" -n %K8S_NAMESPACE% exec %POD% -- sh -c "wget -qO- http://localhost:5000/health || true"
